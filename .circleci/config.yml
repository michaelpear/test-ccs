version: 2
jobs:
    build:
      working_directory: /tmp/my-build
      # Custom docker container
      docker:
       - image: michaelpear/ccsv7build:v4
#Steps just checkout and run build commands
      steps:
       - checkout

       #- run:
       #   shell: /bin/bash
       #   name: cppcheck analysis
      #    command: |
      #      /opt/cppcheck/bin/cppcheck --error-exitcode=1 --enable=all --force --xml-version=2 --xml . 2>static-analysis-output.txt
       #     mkdir -p /tmp/artifacts
       #     cp ./static-analysis-output.txt /tmp/artifacts

            
       - run:
          shell: /bin/bash
          name: CCS-Build
          command: |
            ls -ltr
            echo Running Import
            mkdir -p /tmp/ccsworkspace
            /opt/ti/ccsv7/eclipse/eclipse -noSplash -clean -clearPersistedState
            /opt/ti/ccsv7/eclipse/eclipse -noSplash -consoleLog -data "/tmp/ccsworkspace" -application com.ti.ccstudio.apps.projectCreate -ccs.name newProject -ccs.device com.ti.ccstudio.deviceModel.C2000.GenericC28xxDevice
            /opt/ti/ccsv7/eclipse/eclipse  -noSplash  -data "/tmp/ccsworkspace" -application com.ti.ccstudio.apps.projectImport -ccs.location "/tmp/my-build" -ccs.copyIntoWorkspace
            /opt/ti/ccsv7/eclipse/eclipse  -noSplash -consoleLog -data "/tmp/ccsworkspace" -application com.ti.ccstudio.apps.projectBuild -ccs.workspace -ccs.buildType full 
            /opt/ti/ccsv7/eclipse/eclipse  -noSplash -consoleLog -data "/tmp/ccsworkspace" -application com.ti.ccstudio.apps.projectBuild -ccs.workspace -ccs.buildType full -ccs.configuration Release
            echo List Workspace Files
            ls -ltrR /tmp/ccsworkspace
            echo Create artifacts area
            mkdir -p /tmp/artifacts
            cp /tmp/ccsworkspace/RO_*/Release/*.out /tmp/artifacts
           


       - store_artifacts:
            path: /tmp/artifacts




